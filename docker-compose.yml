services:
  main-db:
    build: ./db/main
    volumes:
      - ./db/main/initdb.d:/docker-entrypoint-initdb.d
      - ./db/main/data:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      TZ: "Asia/Tokyo"
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: maindb
    networks:
      - rapid-go-network

  redis:
    image: "redis:latest"
    ports:
      - 6379:6379
    command: redis-server --requirepass password
    volumes:
      - ./db/redis:/data
    networks:
      - rapid-go-network

  aws:
    build: ./localstack
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${LOCALSTACK_VOLUME_DIR:-./localstack/data}:/var/lib/localstack
    environment:
      SERVICES: s3,sns,sqs
      DEBUG: ${DEBUG:-0}
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: ap-northeast-1
      DISABLE_CORS_CHECKS: 1
    ports:
      - 4566:4566
      - 8000:8080
      - 4572:4572
    networks:
      - rapid-go-network

  aws-cognito:
    image: jagregory/cognito-local:latest
    volumes:
      - ./localstack/cognito/.cognito:/app/.cognito
      - ./localstack/cognito/cognito.json:/app/.cognito/config.json
    command: ["node", "/app/start.js"]
    ports:
      - 9229:9229
    networks:
      - rapid-go-network
    # environment:
    #   DEBUG: 1

  spanner:
    image: gcr.io/cloud-spanner-emulator/emulator
    ports:
      - "9010:9010"
      - "9020:9020"
    networks:
      - rapid-go-network

  spanner-init:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk
    command: >
      bash -c 'gcloud config configurations create emulator &&
              gcloud config set auth/disable_credentials true &&
              gcloud config set project $${PROJECT_ID} &&
              gcloud config set api_endpoint_overrides/spanner $${SPANNER_EMULATOR_URL} &&
              gcloud config set auth/disable_credentials true &&
              gcloud spanner instances create $${INSTANCE_NAME} --config=emulator-config --description=Emulator --nodes=1 &&
              gcloud spanner databases create $${DATABASE_NAME} --instance=$${INSTANCE_NAME}'
    environment:
      PROJECT_ID: "test-project"
      SPANNER_EMULATOR_URL: "http://spanner:9020/"
      INSTANCE_NAME: "test-instance"
      DATABASE_NAME: "test-database"
    networks:
      - rapid-go-network

networks:
  rapid-go-network:
    driver: bridge
