// Code generated by MockGen. DO NOT EDIT.
// Source: staff.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	model "github.com/abyssparanoia/rapid-go/internal/domain/model"
	service "github.com/abyssparanoia/rapid-go/internal/domain/service"
	gomock "github.com/golang/mock/gomock"
)

// MockStaff is a mock of Staff interface.
type MockStaff struct {
	ctrl     *gomock.Controller
	recorder *MockStaffMockRecorder
}

// MockStaffMockRecorder is the mock recorder for MockStaff.
type MockStaffMockRecorder struct {
	mock *MockStaff
}

// NewMockStaff creates a new mock instance.
func NewMockStaff(ctrl *gomock.Controller) *MockStaff {
	mock := &MockStaff{ctrl: ctrl}
	mock.recorder = &MockStaffMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStaff) EXPECT() *MockStaffMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockStaff) Create(ctx context.Context, param service.StaffCreateParam) (*model.Staff, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, param)
	ret0, _ := ret[0].(*model.Staff)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockStaffMockRecorder) Create(ctx, param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockStaff)(nil).Create), ctx, param)
}
