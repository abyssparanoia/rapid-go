name: CI

on: [pull_request]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache: true

      - name: mod download
        run: go mod download

      - name: build
        run: make build

  test:
    runs-on: ubuntu-latest
    env:
      SPANNER_EMULATOR_HOST: localhost:9010
      SPANNER_EMULATOR_HOST_REST: localhost:9020
      SPANNER_PROJECT_ID: test_project
      SPANNER_INSTANCE_ID: test-instance
      SPANNER_DATABASE_ID: test_database
    needs: build
    services:
      spanner_emulator:
        image: gcr.io/cloud-spanner-emulator/emulator:1.5.19
        ports:
          - 9010:9010
          - 9020:9020
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache: true

      - name: setup spanner emulator
        run: |
          curl -s "$SPANNER_EMULATOR_HOST_REST/v1/projects/$SPANNER_PROJECT_ID/instances" --data '{"instanceId": "'$SPANNER_INSTANCE_ID'"}'
          go run github.com/cloudspannerecosystem/wrench create --directory ./db/spanner

      - name: test
        run: make test

  lint-go:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.56

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: -v --timeout=10m -c .golangci.yml `git diff --name-only --diff-filter=ACMRT ${{ github.sha }}^ ${{ github.sha }} | grep .go$ | xargs -I{} dirname {} | sort | uniq`
          args: -v --timeout=10m -c .golangci.yml

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

  lint-proto:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache: true

      - name: proto lint
        run: |
          make lint.proto

  lint-typos:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check typos
        uses: crate-ci/typos@v1.21.0
        with:
          files: ./
          config: ./_typos.toml
